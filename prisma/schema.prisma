// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Faq {
  id        Int      @id @default(autoincrement())
  question  String
  answer    String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("tb_faq")
}

model UserAdmin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  active    Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  passwordAttempts UserAdminPasswordAttempts[]

  @@map("tb_user_admin")
}

model UserAdminPasswordAttempts {
  id            Int      @id @default(autoincrement())
  userAdminId   Int      @map("user_admin_id")
  attemptsCount Int      @map("attempts_count")
  lastAttemptAt DateTime @map("last_attempt_at")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  userAdmin UserAdmin @relation(fields: [userAdminId], references: [id])

  @@map("tb_user_admin_password_attempts")
}

model Notification {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("tb_notification")
}
